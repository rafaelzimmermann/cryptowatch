version: '2.1'

volumes:
    prometheus_data: {}
    grafana_data: {}

services:
  prometheus:
    image: prom/prometheus:v2.17.1
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=1y'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    ports:
      - 9090:9090
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:8.2.0
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    expose:
      - 3000
    ports:
      - 3000:3000
    labels:
      org.label-schema.group: "monitoring"

  pushgateway:
    image: prom/pushgateway:v1.2.0
    container_name: pushgateway
    restart: unless-stopped
    expose:
      - 9091
    ports:
      - 9091:9091
    labels:
      org.label-schema.group: "monitoring"

  postgres:
    image: postgres:14.0
    container_name: postgres
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_USER: walletwatcher
      POSTGRES_PASSWORD: walletwatcher
      POSTGRES_DB: walletwatcher
    expose:
      - 5432
    ports:
      - 5432:5432
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d
      - ./db-data/:/var/lib/postgresql/data/
    labels:
      org.label-schema.group: "database"

  walletwatcher:
    build:
      context: ./walletwatcher
      dockerfile: Dockerfile
    command: gunicorn --bind 0.0.0.0:5000 app:app
    environment:
      SQL_HOST: postgres
      SQL_PORT: 5432
    expose:
      - 5000
    ports:
      - 5000:5000
    depends_on:
      - postgres
    container_name: walletwatcher
    volumes:
      - ./wallets_data:/wallets_data
    restart: unless-stopped
    labels:
      org.label-schema.group: "importer"

  nginx:
    build: ./walletwatcher-nginx
    container_name: walletwatcher_nginx
    volumes:
      - ./walletwatcher-nginx/static:/app/static
    ports:
      - 1337:80
    depends_on:
      - walletwatcher

networks:
  default:
    driver: bridge